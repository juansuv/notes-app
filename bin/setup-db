#!/bin/bash

# Cargar variables desde archivos .env y .env.test
# Ruta a la carpeta que contiene los archivos de configuración
ENV_DIR="./server/app"



# Archivo principal de configuración (.env)
if [ -f "$ENV_DIR/.env" ]; then
  export $(grep -v '^#' "$ENV_DIR/.env" | xargs)
  echo "Variables cargadas desde .env"
else
  echo "Archivo .env no encontrado en $ENV_DIR. Por favor, verifica."
  exit 1
fi

# Archivo de configuración de pruebas (.env.test)
if [ -f "$ENV_DIR/.env.test" ]; then
  export $(grep -v '^#' "$ENV_DIR/.env.test" | xargs)
  echo "Variables cargadas desde .env.test"
else
  echo "Archivo .env.test no encontrado en $ENV_DIR. Por favor, verifica."
  exit 1
fi

# Verificar variables obligatorias
REQUIRED_VARS=("DB_USER" "DB_PASS" "DB_HOST" "DB_PORT" "DB_NAME" "DB_TEST_NAME")
for VAR in "${REQUIRED_VARS[@]}"; do
  if [ -z "${!VAR}" ]; then
    echo "Error: La variable $VAR no está definida en los archivos .env o .env.test."
    exit 1
  fi
done

# Crear bases de datos
echo "Iniciando configuración de las bases de datos..."

# Comando para crear usuario y asignar permisos si no existe
create_user() {
  echo "Creando usuario: $DB_USER"
  psql -U postgres -c "DO \$\$
  BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '$DB_USER') THEN
      CREATE ROLE $DB_USER WITH LOGIN PASS '$DB_PASS';
      ALTER ROLE $DB_USER CREATEDB;
    END IF;
  END
  \$\$;"
}

# Comando para crear bases de datos
create_databases() {
  DATABASES=("$DB_NAME" "$DB_TEST_NAME")
  for DB in "${DATABASES[@]}"; do
    echo "Creando base de datos: $DB"
    psql -U postgres -c "CREATE DATABASE \"$DB\" OWNER $DB_USER;" || \
      echo "La base de datos $DB ya existe o no se pudo crear."
  done
}

# Verificar y conectar al servidor PostgreSQL
check_postgres() {
  echo "Verificando conexión a PostgreSQL..."
  pg_isready -h "$DB_HOST" -p "$DB_PORT" > /dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "No se puede conectar a PostgreSQL en $DB_HOST:$DB_PORT. Verifica que el servidor esté activo."
    exit 1
  fi
}

# Llamar funciones
check_postgres
create_user
create_databases

echo "¡Configuración completada!"
